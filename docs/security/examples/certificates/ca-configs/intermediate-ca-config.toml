# RustMQ Simplified CA Configuration - v2.0 
# Compatible with RustMQ 1.0.0+ Simplified Certificate Signing Implementation
# Updated: August 2025 - Simplified to root CA only for improved performance

# IMPORTANT NOTE: RustMQ now uses a simplified architecture with only root CAs
# Intermediate CAs have been removed to improve performance and reduce complexity
# All certificates are now signed directly by the root CA

# This file is kept for reference purposes. For actual configuration,
# see root-ca-config.toml

[legacy_notice]
# Previous versions of RustMQ supported intermediate CAs
# The current simplified architecture provides:
# - Improved performance with direct root CA signing
# - Reduced certificate chain validation complexity  
# - Simplified trust chain management
# - Better caching performance
# - Easier certificate management operations

# Migration from intermediate CA architecture:
# 1. All certificates are now issued directly from root CA
# 2. Certificate validation is simplified to root CA + end entity
# 3. Trust chain is shortened for better performance
# 4. Certificate templates remain the same but use root CA signing

[simplified_architecture]
ca_types_supported = ["root_ca"]
intermediate_ca_support = false
certificate_chain_depth = 1  # Root CA + End Entity only
performance_improvement = "Significant reduction in validation latency"
management_complexity = "Greatly simplified"

# For current CA configuration, see:
# - root-ca-config.toml (primary CA configuration)
# - ../cert-templates/ (certificate templates)
# - ../../CERTIFICATE_MANAGEMENT.md (documentation)