# RustMQ Security Performance Baseline Configuration
# This file defines the expected performance baseline for security benchmarks

[metadata]
version = "1.0.0"
date = "2025-08-07"
rustmq_version = "0.9.1"
description = "Enterprise security performance requirements"

[authorization]
# L1 Cache (Connection-local)
l1_cache_hit_ns = 10
l1_cache_hit_tolerance = 5  # ±5ns

# L2 Cache (Broker-wide sharded)
l2_cache_hit_ns = 50
l2_cache_hit_tolerance = 10  # ±10ns

# L3 Bloom Filter
l3_bloom_filter_ns = 20
l3_bloom_filter_tolerance = 5  # ±5ns

# Cache miss with storage fetch
cache_miss_us = 1000  # 1ms
cache_miss_tolerance = 200  # ±200μs

# Overall authorization latency for cache hits
overall_cache_hit_ns = 100
overall_tolerance = 20  # ±20ns

# Throughput requirements
min_throughput_ops_sec = 100_000
target_throughput_ops_sec = 150_000

[authentication]
# mTLS end-to-end
mtls_handshake_ms = 10
mtls_tolerance = 2  # ±2ms

# Certificate validation
cert_validation_ms = 5
cert_validation_tolerance = 1  # ±1ms

# Certificate parsing
cert_parsing_us = 500
cert_parsing_tolerance = 100  # ±100μs

# Principal extraction
principal_extraction_ns = 100
principal_tolerance = 20  # ±20ns

[memory]
# String interning efficiency
min_memory_reduction_percent = 60
target_memory_reduction_percent = 70
max_memory_reduction_percent = 80

# Cache memory footprint (bytes per entry)
l1_cache_memory_per_entry = 150
l2_cache_memory_per_entry = 200
certificate_cache_per_entry = 5000

# Maximum memory usage (MB)
max_total_cache_memory_mb = 100
max_string_pool_memory_mb = 50

[scalability]
# ACL rules performance
rules_1k_latency_ms = 10
rules_10k_latency_ms = 50
rules_100k_latency_ms = 200

# Concurrent operations
threads_1_throughput = 100_000
threads_10_throughput = 500_000
threads_100_throughput = 1_000_000
threads_1000_throughput = 2_000_000

# Batch operations
batch_10_latency_us = 100
batch_100_latency_us = 500
batch_1000_latency_us = 2000

[cluster]
# ACL synchronization
acl_sync_ms = 100
acl_sync_tolerance = 20  # ±20ms

# Distributed operations
node_sync_latency_ms = 50
broadcast_latency_ms = 100

[network]
# QUIC with security
quic_security_overhead_percent = 5
max_quic_overhead_percent = 10

# Security metadata transmission
metadata_transmission_us_per_kb = 10

[certificate_management]
# Certificate generation
rsa_2048_generation_ms = 50
ecdsa_p256_generation_ms = 10

# Certificate operations
cert_storage_us = 100
cert_retrieval_us = 50
cert_renewal_ms = 100

# CRL operations
crl_check_us_per_1000 = 500

[performance_gates]
# Regression detection thresholds (percent)
latency_regression_threshold = 10
throughput_regression_threshold = 5
memory_regression_threshold = 15

# Improvement recognition thresholds (percent)
latency_improvement_threshold = 5
throughput_improvement_threshold = 10
memory_improvement_threshold = 10

[hardware_requirements]
# Minimum hardware for meeting targets
min_cpu_cores = 4
min_cpu_frequency_ghz = 2.4
min_memory_gb = 8
recommended_cpu_cores = 8
recommended_cpu_frequency_ghz = 3.0
recommended_memory_gb = 16

[benchmark_configuration]
# Benchmark execution parameters
sample_size = 100
warm_up_time_seconds = 3
measurement_time_seconds = 10
confidence_level = 0.95
noise_threshold = 0.03

# Profiling configuration
enable_flamegraphs = true
profile_time_seconds = 10
perf_event_frequency = 100